{"version":3,"sources":["./src/app/views/event-detail/event-detail.module.ts","./src/app/shared/services/events/events-resolver.service.ts","./src/app/views/event-detail/main-event-detail/event-detail.component.ts","./src/app/views/event-detail/main-event-detail/event-detail.component.html","./src/app/views/event-detail/components/cart/cart.component.ts","./src/app/views/event-detail/components/cart/cart.component.html","./src/app/shared/models/event.model.ts","./src/app/views/event-detail/event-detail-routing.module.ts"],"names":[],"mappings":"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","file":"views-event-detail-event-detail-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EventDetailComponent } from './main-event-detail/event-detail.component';\nimport { EventDetailRoutingModule } from './event-detail-routing.module';\nimport { CartComponent } from './components/cart/cart.component';\n\n\n\n@NgModule({\n  declarations: [EventDetailComponent, CartComponent],\n  imports: [\n    CommonModule, EventDetailRoutingModule]\n})\nexport class EventDetailModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { EventsService } from './events.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsResolverService implements Resolve<Observable<string>>{\n\n  results$: Observable<any>;\n  constructor(\n    private _eventsService: EventsService\n  ) { }\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any> {\n    const id = route.paramMap.get('id');\n    this.results$ = this._eventsService.getById(id);\n    return this.results$;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Cart, EventInfo, EventSession, Session } from 'src/app/shared/models/event.model';\n\n@Component({\n  selector: 'app-event-detail',\n  templateUrl: './event-detail.component.html',\n  styleUrls: ['./event-detail.component.scss']\n})\nexport class EventDetailComponent implements OnInit {\n  eventSessions = new EventSession();\n  emptySessions = false;\n  cart: Cart[] = [];\n  cartQuantity = [];\n  indexEvento = 0;\n  \n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.getDataFromRoute()\n  }\n\n  //Recoge los datos del resolver (GetById)\n  getDataFromRoute(): void {\n    const snapshot = this._activatedRoute.snapshot;\n    this.eventSessions = snapshot.data.detail;\n    this.showInfoPannel();\n  }\n\n  //En el caso de que no haya resultados de la consulta, hacemos que muestre el panel de informaci√≥n\n  showInfoPannel(){\n    if(Object.keys(this.eventSessions).length === 0){\n      this.emptySessions = true;\n    }else{\n      this.emptySessions = false;\n      this.sortEventSessions();\n    }\n  }\n//Ordenamos por fechas y inicializamos el array del carrito\n  sortEventSessions(): void {\n    var totalSessions = 0;\n    this.eventSessions.sessions.sort(function(a,b){\n      totalSessions++\n      return parseInt(a.date) - parseInt(b.date);\n    });\n\n    for (let index = 0; index < totalSessions; index++) {\n      this.cartQuantity.push(0)      \n    }\n  }\n\n  \n  addToCart(date: string, index){\n    var availability = this.eventSessions.sessions[index].availability;\n    this.eventSessions.sessions[index].availability = (parseInt(availability)-1).toString();\n    this.cartQuantity[index]++;\n    /*En el caso de que el carrito est√© vac√≠o, hacemos un push sin comprobar que el evento exista con anterioridad*/\n    if(this.cart.length === 0){\n      this.addFirstSession(date);\n    }else{\n      this.addMoreSessions(date);\n    }\n\n  }\n  \n  /*Creamos el objeto para a√±adirlo al carrito*/\n  addFirstSession(date: string){\n    const firstSessionCart = {\n      eventInfo: this.eventSessions.event,\n      sessions:[\n        {\n          date: date,\n          quantity: 1,\n        }\n    ]\n      \n    }\n\n    this.cart.push(firstSessionCart)\n  }\n\n\n  addMoreSessions(date: string) {\n    var sessionFind = session => session.eventInfo.id == this.eventSessions.event.id;\n    var index = 0;\n    /* Buscamos si en el carrito ya est√° el evento a√±adido, en el caso de que lo est√©, recogemos el √≠ndice para modificar cantidades\n    o en su defecto a√±adir la nueva fecha */\n    if(this.cart.find(sessionFind)){\n      index = this.cart.findIndex(sessionFind);\n      this.searchSameDate(date, index);\n    }else{\n      this.addFirstSession(date)\n    }\n  }\n\n  /*Funci√≥n para buscar si la sesi√≥n (fecha) ya est√° a√±adida*/\n  searchSameDate(date, cartIndex){\n    var dateFind = session => session.date == date;\n    var dateIndex = 0;\n\n    //Si ya existe, sumamos 1 a la cantidad, si no, vamos a la funci√≥n para meter otra sesi√≥n\n    if(this.cart[cartIndex].sessions.find(dateFind)){\n      dateIndex = this.cart[cartIndex].sessions.findIndex(dateFind);\n      this.cart[cartIndex].sessions[dateIndex].quantity ++;\n    }else{\n      this.addNewSesionDate(date, cartIndex, dateIndex);\n    }\n\n    \n  }\n  \n  //Creamos el objeto a a√±adir y lo a√±adimos dentro del evento que es\n  addNewSesionDate(date: string, cartIndex: string, dateIndex: number){\n    const newSession = {\n      date: date,\n      quantity: 1,\n    }\n\n    this.cart[cartIndex].sessions.push(newSession)\n  }\n  \n\n  deleteFromList(date: string, i?: string){\n    //Volver a poner disponibilidad\n    this.eventSessions.sessions[i].availability++;\n\n\n    //Eliminarlo del carrito\n    this.cartQuantity[i]--;\n    var indexSession;\n    indexSession = this.cart[this.indexEvento].sessions.findIndex(session => session.date == date)\n\n    if(this.cart[this.indexEvento].sessions[indexSession].quantity > 1){\n      this.cart[this.indexEvento].sessions[indexSession].quantity--\n    }else{\n      if(indexSession > -1){\n        this.cart[this.indexEvento].sessions.splice(indexSession,1)\n      }\n\n    if(this.cart[this.indexEvento].sessions.length == 0){\n      this.cart = [];\n    }\n    }\n  }\n\n  //Funci√≥n para borrar una sesi√≥n del carrito.\n  deleteFromCart(event){\n    //Conseguimos saber en que posici√≥n de la lista est√°\n    var indexSession = this.eventSessions.sessions.findIndex(session => session.date == event.date);\n\n  //Reutilizamos la misma funci√≥n que se usa para eliminar desde la propia lista\n    if(this.eventSessions.event.id == event.id){\n      this.deleteFromList(event.date, indexSession.toString())\n    }else{\n      alert('diferente')\n    }\n  }\n\n  backButton(){\n    this.router.navigate(['home']);\n  }\n}\n","<div class=\"button_div\">\n    <button  (click)=\"backButton()\">\n        <span class=\"arrow\">ü°ê</span>\n        <span>Volver</span>\n      </button>\n</div>\n\n<div class=\"container\" *ngIf=\"emptySessions == false else notFound\">\n    <!--Section: Content-->\n    <section class=\"text-center\" *ngIf=\"eventSessions != null else notFound\">\n      <div class=\"row main\">\n        <div class=\"col-lg-6 mb-4\">\n          <div class=\"sessions\">\n            <h4 class=\"text-center mt-4 pb-4 pt-4\">Sesiones:</h4>\n            <div class=\"sessionList\">\n                <div class=\"row pb-4\"  *ngFor=\"let session of eventSessions.sessions; let i = index\">\n                    <div class=\"col-md-9 col-9\">\n                        <span>Fecha: {{session.date | date: 'dd/MM/yyyy' }}, Disponibilidad: {{session.availability}}</span>\n                    </div>\n                    <div class=\"col-md-1 col-1\">\n                        <a [ngClass]=\"{'disabled': !cartQuantity[i] != 0}\" [routerLink]=\"\" (click)=\"deleteFromList(session.date, i)\">-</a>\n                    </div>\n                    <div class=\"col-md-1 col-1\">\n                        <span>{{cartQuantity[i]}}</span>\n                    </div>\n                    <div class=\"col-md-1 col-1\">\n                        <a [ngClass]=\"{'disabled': eventSessions.sessions[i].availability == 0}\" [routerLink]=\"\" (click)=\"addToCart(session.date, i)\">+</a>\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-lg-6 mt-4\">\n            <app-cart [cart]=\"cart\" (deleteFromCartEvt)=\"deleteFromCart($event)\"></app-cart>\n        </div>\n      </div>\n    </section>\n  </div>\n\n\n\n<ng-template #notFound>\n    <div class=\"container mt-4\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-auto\">\n                <span class=\"notFoundMessage p-3\">EVENT INFO NOT FOUND</span>\n            </div>\n        </div>\n    </div>\n</ng-template>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Cart, Session } from 'src/app/shared/models/event.model';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent {\n  @Input() cart: Cart;\n  @Output() deleteFromCartEvt: EventEmitter<any> = new EventEmitter<any>();\n  constructor() { }\n\n  //Funci√≥n que construir√° un objeto simple con el id del evento y la fecha\n  deleteFromCart(cart: Cart, date){\n    const sessionToDlt = {\n      id: cart.eventInfo.id,\n      date: date\n    }\n    this.deleteFromCartEvt.emit(sessionToDlt);\n  }\n  \n\n}\n","<div class=\"cart row\">\n    <div class=\"col-\">\n        <h3 class=\"text-center mt-4 pb-4\">Carrito</h3>\n        \n        <div *ngFor=\"let cart of cart\">\n            <h5 class=\"text-center\">{{cart.eventInfo.title}}</h5>\n            <div class=\"p-2\" *ngFor=\"let session of cart.sessions; let i = index\">\n                <div class=\"row\">\n                    <div class=\"col-10 date\">\n                        <span>{{session.date | date: 'dd/MM/yyyy'}}</span>\n                    </div>\n                    <div class=\"col-1\">\n                        <span>x{{session.quantity}}</span>\n                    </div>\n\n                    <div class=\"col-1\">\n                        <a [routerLink]=\"\" (click)=\"deleteFromCart(cart, session.date)\">\n                            <img class=\"image\" src=\"././././assets/img/trash.png\">\n                        </a>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>","export interface EventDetail {\r\n    id: string;\r\n    title: string;\r\n    subtitle: string;\r\n    image: string;\r\n    place: string;\r\n    startDate: string;\r\n    endDate: string;\r\n    description: string;\r\n}\r\n\r\nexport interface EventInfo {\r\n    id: string;\r\n    title: string;\r\n    subtitle: string;\r\n    image: string;\r\n}\r\n\r\nexport interface Session {\r\n    date: string;\r\n    availability: string;\r\n}\r\n\r\nexport class EventSession {\r\n    event?: EventInfo;\r\n    sessions?: Session[];\r\n}\r\n\r\nexport interface Cart{\r\n    eventInfo: EventInfo,\r\n    sessions: SessionCart[]\r\n}\r\n\r\nexport interface SessionCart {\r\n    date: string;\r\n    quantity: number;\r\n}","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EventsResolverService } from 'src/app/shared/services/events/events-resolver.service';\nimport { EventDetailComponent } from './main-event-detail/event-detail.component';\n\n\nconst routes = [{\n    path: ':id',\n    resolve: {detail: EventsResolverService},\n    component: EventDetailComponent,\n    data: { title: 'Eventos - Detalle de Evento'}\n}]\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EventDetailRoutingModule { }\n"],"sourceRoot":"webpack:///"}